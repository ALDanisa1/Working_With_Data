Mallo68,272.76,Media Armoire
Ramey433,63.99,Bamboo End Table
Warre166,272.76,Captain RecliNCr
Lucas737,272.76,Captain RecliNCr
Warre146,135.16,Bamboo Coffee Table
Ramey461,135.16,Bamboo Coffee Table
Treig693,272.76,Media Armoire
Ramey669,272.76,Media Armoire
Norma343,135.16,Bamboo Coffee Table
Lucas565,639.96,Chameleon Couch
Benso570,639.96,Chameleon Couch
McCul740,639.96,Chameleon Couch
Benso486,272.76,Media Armoire
Benso192,63.99,Bamboo End Table
Ramey266,272.76,Captain RecliNCr
Benso629,272.76,Captain RecliNCr
McCul343,272.76,Media Armoire
Warre771,272.76,Media Armoire
Leon236,135.16,Bamboo Coffee Table
Owen710,63.99,Bamboo End Table
Norma160,135.16,Bamboo Coffee Table
Owen294,135.16,Bamboo Coffee Table
Lucas22,272.76,Media Armoire
Ramey834,272.76,Captain RecliNCr
Warre745,639.96,Chameleon Couch
Treig577,272.76,Captain RecliNCr
McCul240,272.76,Captain RecliNCr
Mayna590,272.76,Media Armoire
Treig443,272.76,Media Armoire
Mallo405,63.99,Bamboo End Table
Norma390,272.76,Captain RecliNCr
Kirst324,135.16,Bamboo Coffee Table
Leon594,272.76,Captain RecliNCr
Kirst675,135.16,Bamboo Coffee Table
Warre760,63.99,Bamboo End Table
Norma722,272.76,Media Armoire
Mallo333,272.76,Media Armoire
McCul64,63.99,Bamboo End Table
Ramey343,272.76,Media Armoire
McCul695,135.16,Bamboo Coffee Table
Mallo865,272.76,Media Armoire
Benso342,135.16,Bamboo Coffee Table
Kirst453,272.76,Captain RecliNCr
Treig523,272.76,Media Armoire
Kirst697,272.76,Media Armoire
Warre764,639.96,Chameleon Couch
Mallo488,63.99,Bamboo End Table
Ramey194,135.16,Bamboo Coffee Table
Benso532,272.76,Captain RecliNCr
McCul117,639.96,Chameleon Couch
Benso505,272.76,Captain RecliNCr
Kirst318,135.16,Bamboo Coffee Table
Warre384,639.96,Chameleon Couch
McCul315,63.99,Bamboo End Table
Treig537,639.96,Chameleon Couch
Kirst643,272.76,Captain RecliNCr
Kirst345,639.96,Chameleon Couch
McCul178,63.99,Bamboo End Table
McCul450,63.99,Bamboo End Table
Kirst527,272.76,Media Armoire
Benso217,63.99,Bamboo End Table
Warre749,639.96,Chameleon Couch
Norma558,272.76,Media Armoire
Lucas420,135.16,Bamboo Coffee Table
McCul257,639.96,Chameleon Couch
Lucas665,135.16,Bamboo Coffee Table
Treig39,135.16,Bamboo Coffee Table
Mallo7,63.99,Bamboo End Table
Ramey87,63.99,Bamboo End Table
Ramey173,639.96,Chameleon Couch
Norma381,272.76,Media Armoire
Norma169,272.76,Captain RecliNCr
Treig71,639.96,Chameleon Couch
Benso632,272.76,Media Armoire
Mayna807,135.16,Bamboo Coffee Table
Mallo149,63.99,Bamboo End Table
Lucas289,639.96,Chameleon Couch
Kirst185,639.96,Chameleon Couch
Ramey362,63.99,Bamboo End Table
Mallo376,639.96,Chameleon Couch
Benso147,272.76,Media Armoire
Mallo880,63.99,Bamboo End Table
Norma233,272.76,Captain RecliNCr
Treig311,272.76,Captain RecliNCr
Lucas173,639.96,Chameleon Couch
Treig339,272.76,Captain RecliNCr
Lucas319,272.76,Captain RecliNCr
Lucas252,272.76,Media Armoire
Norma518,135.16,Bamboo Coffee Table
Treig363,272.76,Captain RecliNCr
McCul874,135.16,Bamboo Coffee Table

import java.util.*;

public class GraphGenerator {
    public static void main(String[] args) {
        int numNodes = 5; // specify the number of nodes in the graph

        // Create an adjacency list for the graph
        List<Integer>[] adjList = new List[numNodes];
        for (int i = 0; i < numNodes; i++) {
            adjList[i] = new ArrayList<>();
        }

        // Create a set to keep track of the edges in the graph
        Set<String> edgeSet = new HashSet<>();

        // Create a Random object to generate random numbers
        Random rand = new Random();

        // Generate the initial graph
        for (int i = 0; i < numNodes - 1; i++) {
            int nodeA, nodeB;

            // Generate two random nodes, ensuring that they are different and not already connected
            do {
                nodeA = rand.nextInt(numNodes);
                nodeB = rand.nextInt(numNodes);
            } while (nodeA == nodeB || edgeSet.contains(nodeA + " " + nodeB));

            // Add the new edge to the graph and adjacency list
            
            edgeSet.add(nodeA + " " + nodeB);
            edgeSet.add(nodeB + " " + nodeA);
            adjList[nodeA].add(nodeB);
            adjList[nodeB].add(nodeA);
        }


        // Generate additional edges for the graph
        int cost = rand.nextInt(100);
        for (int i = 0; i < numNodes; i++) {
            for (int j = i + 1; j < numNodes; j++) {
                if (!edgeSet.contains(i + " " + j)) { // Check if the edge is not already in the graph
                    // Add the new edge to the graph and adjacency list, and print its cost
                    edgeSet.add(i + " " + j);
                    edgeSet.add(j + " " + i);
                    adjList[i].add(j);
                    adjList[j].add(i);
                    System.out.printf("%c %c %d\n", (char) (i + 'A'), (char) (j + 'A'), cost);
                    
                }
            }
        }
    }
}
